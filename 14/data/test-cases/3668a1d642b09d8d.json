{
  "uid" : "3668a1d642b09d8d",
  "name" : "test_con_del_article",
  "fullName" : "vizsgaremek.test_con_del_article#test_con_del_article",
  "historyId" : "a85c80c8360ecac8fc1d3ed8148d2b1f",
  "time" : {
    "start" : 1629558159836,
    "stop" : 1629558194956,
    "duration" : 35120
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert (11 - 1) == 4\n +  where 11 = int(11)\n +  and   4 = int(4)",
  "statusTrace" : "def test_con_del_article():\n        from selenium import webdriver\n        from selenium.webdriver.chrome.options import Options\n        from webdriver_manager.chrome import ChromeDriverManager\n        import time\n    \n        opt = Options()\n        opt.headless = True\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=opt)\n    \n        driver.get('http://localhost:1667/#/')\n    \n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[2]/a').click()\n        time.sleep(2)\n        # bejelentkezes\n        driver.find_element_by_xpath('//input[@placeholder=\"Email\"]').send_keys('testuser1@example.com')\n        driver.find_element_by_xpath('//input[@placeholder=\"Password\"]').send_keys('Abcd123$')\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n        time.sleep(5)\n    \n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[4]/a').click()\n        time.sleep(5)\n        # meglevo testuser4 kommentek megszamlalasa\n        counter = driver.find_elements_by_xpath('//a/h1')\n    \n        num_of_comment = len(counter)\n        print(f'aktualis kommentek szama:  {str(num_of_comment)}')\n        time.sleep(4)\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div[2]/div/div/div[2]/div/div/div[1]/a/h1').click()\n        time.sleep(5)\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div[1]/div/div/span/button/span').click()\n    \n        time.sleep(4)\n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[4]/a').click()\n        time.sleep(5)\n        new_counter = driver.find_elements_by_xpath('//span[text()=\"Read more...\"]')\n        new_num_of_comment = len(new_counter)\n        print(f'aktualis kommentek torles utani szama:  {str(new_num_of_comment)}')\n        time.sleep(4)\n>       assert (int(num_of_comment) - 1) == int(new_num_of_comment)\nE       assert (11 - 1) == 4\nE        +  where 11 = int(11)\nE        +  and   4 = int(4)\n\nvizsgaremek/test_con_del_article.py:40: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert (11 - 1) == 4\n +  where 11 = int(11)\n +  and   4 = int(4)",
    "statusTrace" : "def test_con_del_article():\n        from selenium import webdriver\n        from selenium.webdriver.chrome.options import Options\n        from webdriver_manager.chrome import ChromeDriverManager\n        import time\n    \n        opt = Options()\n        opt.headless = True\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=opt)\n    \n        driver.get('http://localhost:1667/#/')\n    \n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[2]/a').click()\n        time.sleep(2)\n        # bejelentkezes\n        driver.find_element_by_xpath('//input[@placeholder=\"Email\"]').send_keys('testuser1@example.com')\n        driver.find_element_by_xpath('//input[@placeholder=\"Password\"]').send_keys('Abcd123$')\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div/div/div/form/button').click()\n        time.sleep(5)\n    \n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[4]/a').click()\n        time.sleep(5)\n        # meglevo testuser4 kommentek megszamlalasa\n        counter = driver.find_elements_by_xpath('//a/h1')\n    \n        num_of_comment = len(counter)\n        print(f'aktualis kommentek szama:  {str(num_of_comment)}')\n        time.sleep(4)\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div[2]/div/div/div[2]/div/div/div[1]/a/h1').click()\n        time.sleep(5)\n        driver.find_element_by_xpath('//*[@id=\"app\"]/div/div[1]/div/div/span/button/span').click()\n    \n        time.sleep(4)\n        driver.find_element_by_xpath('//*[@id=\"app\"]/nav/div/ul/li[4]/a').click()\n        time.sleep(5)\n        new_counter = driver.find_elements_by_xpath('//span[text()=\"Read more...\"]')\n        new_num_of_comment = len(new_counter)\n        print(f'aktualis kommentek torles utani szama:  {str(new_num_of_comment)}')\n        time.sleep(4)\n>       assert (int(num_of_comment) - 1) == int(new_num_of_comment)\nE       assert (11 - 1) == 4\nE        +  where 11 = int(11)\nE        +  and   4 = int(4)\n\nvizsgaremek/test_con_del_article.py:40: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "10e497a7c63a7096",
      "name" : "log",
      "source" : "10e497a7c63a7096.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "6b264b3d3c6fb290",
      "name" : "stdout",
      "source" : "6b264b3d3c6fb290.txt",
      "type" : "text/plain",
      "size" : 72
    }, {
      "uid" : "b0a8c42c89cec66e",
      "name" : "stderr",
      "source" : "b0a8c42c89cec66e.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "vizsgaremek"
  }, {
    "name" : "suite",
    "value" : "test_con_del_article"
  }, {
    "name" : "host",
    "value" : "fv-az39-896"
  }, {
    "name" : "thread",
    "value" : "3896-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "vizsgaremek.test_con_del_article"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3668a1d642b09d8d.json",
  "parameterValues" : [ ]
}